[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "copilotkit-runtime-python"
version = "1.8.15"
description = "CopilotKit Python Runtime - The Python runtime for integrating powerful AI Copilots into any application"
authors = ["CopilotKit Team <team@copilotkit.ai>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/CopilotKit/CopilotKit"
repository = "https://github.com/CopilotKit/CopilotKit"
documentation = "https://docs.copilotkit.ai"
keywords = ["copilotkit", "copilot", "ai", "assistant", "python", "automation", "deepseek"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "copilotkit_runtime"}]

[tool.poetry.dependencies]
python = "^3.8"
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
pydantic = "^2.5.0"
httpx = "^0.25.0"
requests = "^2.31.0"
rx = "^4.0.4"
sse-starlette = "^2.1.0"
structlog = "^23.2.0"
aiohttp = "^3.9.0"
typing-extensions = "^4.8.0"
jsonschema = "^4.20.0"
asyncio-stream = "^0.6.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.12.0"
black = "^23.10.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
pre-commit = "^3.5.0"
coverage = "^7.3.0"
pytest-cov = "^4.1.0"

[tool.poetry.scripts]
copilotkit-runtime = "copilotkit_runtime.cli:main"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --cov=copilotkit_runtime --cov-report=term-missing"
testpaths = ["tests"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
]

[tool.coverage.run]
source = ["copilotkit_runtime"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]