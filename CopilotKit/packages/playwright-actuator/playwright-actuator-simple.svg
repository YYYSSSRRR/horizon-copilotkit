<svg width="1000" height="700" xmlns="http://www.w3.org/2000/svg">
  <!-- 标题 -->
  <text x="500" y="30" text-anchor="middle" fill="#2c3e50" font-size="20" font-weight="bold">Playwright-Actuator 架构</text>
  
  <!-- 第4层：运行时层 -->
  <rect x="50" y="60" width="900" height="120" fill="white" stroke="#3498db" stroke-width="2" rx="8"/>
  <text x="70" y="85" fill="#3498db" font-size="14" font-weight="bold">第4层：运行时层 (Runtime Layer)</text>
  
  <!-- 运行时组件 -->
  <rect x="80" y="100" width="180" height="60" fill="white" stroke="#3498db" stroke-width="1" rx="4"/>
  <text x="170" y="120" text-anchor="middle" font-size="11" font-weight="bold">TestRunner</text>
  <text x="90" y="135" font-size="9">• runScript()</text>
  <text x="90" y="148" font-size="9">• setGlobalHooks()</text>
  
  <rect x="280" y="100" width="180" height="60" fill="white" stroke="#3498db" stroke-width="1" rx="4"/>
  <text x="370" y="120" text-anchor="middle" font-size="11" font-weight="bold">Module System</text>
  <text x="290" y="135" font-size="9">• require() 模拟</text>
  <text x="290" y="148" font-size="9">• ES6 import 转换</text>
  
  <rect x="480" y="100" width="180" height="60" fill="white" stroke="#3498db" stroke-width="1" rx="4"/>
  <text x="570" y="120" text-anchor="middle" font-size="11" font-weight="bold">兼容性检查</text>
  <text x="490" y="135" font-size="9">• checkCompatibility()</text>
  <text x="490" y="148" font-size="9">• MutationObserver</text>
  
  <!-- 第3层：框架适配层 -->
  <rect x="50" y="200" width="900" height="120" fill="white" stroke="#e74c3c" stroke-width="2" rx="8"/>
  <text x="70" y="225" fill="#e74c3c" font-size="14" font-weight="bold">第3层：框架适配层 (Framework Adapter)</text>
  
  <rect x="80" y="240" width="200" height="60" fill="white" stroke="#e74c3c" stroke-width="1" rx="4"/>
  <text x="180" y="260" text-anchor="middle" font-size="11" font-weight="bold">ReactAdapter</text>
  <text x="90" y="275" font-size="9">• isReactComponent()</text>
  <text x="90" y="288" font-size="9">• createSyntheticEvent()</text>
  
  <rect x="300" y="240" width="200" height="60" fill="white" stroke="#e74c3c" stroke-width="1" rx="4"/>
  <text x="400" y="260" text-anchor="middle" font-size="11" font-weight="bold">HorizonAdapter</text>
  <text x="310" y="275" font-size="9">• isHorizonComponent()</text>
  <text x="310" y="288" font-size="9">• triggerChangeEvent()</text>
  
  <rect x="520" y="240" width="200" height="60" fill="white" stroke="#e74c3c" stroke-width="1" rx="4"/>
  <text x="620" y="260" text-anchor="middle" font-size="11" font-weight="bold">智能事件路由</text>
  <text x="530" y="275" font-size="9">• 框架特定事件</text>
  <text x="530" y="288" font-size="9">• 原生DOM事件</text>
  
  <!-- 第2层：DOM操作层 -->
  <rect x="50" y="340" width="900" height="120" fill="white" stroke="#f39c12" stroke-width="2" rx="8"/>
  <text x="70" y="365" fill="#f39c12" font-size="14" font-weight="bold">第2层：DOM操作层 (DOM Operation)</text>
  
  <rect x="80" y="380" width="180" height="60" fill="white" stroke="#f39c12" stroke-width="1" rx="4"/>
  <text x="170" y="400" text-anchor="middle" font-size="11" font-weight="bold">EventSimulator</text>
  <text x="90" y="415" font-size="9">• simulateClick()</text>
  <text x="90" y="428" font-size="9">• simulateTyping()</text>
  
  <rect x="280" y="380" width="180" height="60" fill="white" stroke="#f39c12" stroke-width="1" rx="4"/>
  <text x="370" y="400" text-anchor="middle" font-size="11" font-weight="bold">WaitManager</text>
  <text x="290" y="415" font-size="9">• waitForElement()</text>
  <text x="290" y="428" font-size="9">• querySelector()</text>
  
  <rect x="480" y="380" width="180" height="60" fill="white" stroke="#f39c12" stroke-width="1" rx="4"/>
  <text x="570" y="400" text-anchor="middle" font-size="11" font-weight="bold">RoleSelector</text>
  <text x="490" y="415" font-size="9">• buildRoleXPath()</text>
  <text x="490" y="428" font-size="9">• 语义化查询</text>
  
  <rect x="680" y="380" width="180" height="60" fill="white" stroke="#f39c12" stroke-width="1" rx="4"/>
  <text x="770" y="400" text-anchor="middle" font-size="11" font-weight="bold">查询引擎</text>
  <text x="690" y="415" font-size="9">• CSS选择器</text>
  <text x="690" y="428" font-size="9">• XPath查询</text>
  
  <!-- 第1层：API适配层 -->
  <rect x="50" y="480" width="900" height="160" fill="white" stroke="#27ae60" stroke-width="2" rx="8"/>
  <text x="70" y="505" fill="#27ae60" font-size="14" font-weight="bold">第1层：API适配层 (API Adapter)</text>
  
  <!-- PageAdapter -->
  <rect x="80" y="520" width="250" height="100" fill="white" stroke="#27ae60" stroke-width="1" rx="4"/>
  <text x="205" y="540" text-anchor="middle" font-size="12" font-weight="bold">PageAdapter</text>
  <text x="90" y="555" font-size="10">页面操作 API:</text>
  <text x="90" y="570" font-size="9">• goto(url) - 页面导航</text>
  <text x="90" y="583" font-size="9">• click(selector) - 点击操作</text>
  <text x="90" y="596" font-size="9">• fill(selector, value) - 填充</text>
  <text x="90" y="609" font-size="9">• waitForSelector() - 等待</text>
  
  <!-- LocatorAdapter -->
  <rect x="350" y="520" width="250" height="100" fill="white" stroke="#27ae60" stroke-width="1" rx="4"/>
  <text x="475" y="540" text-anchor="middle" font-size="12" font-weight="bold">LocatorAdapter</text>
  <text x="360" y="555" font-size="10">现代定位器 API:</text>
  <text x="360" y="570" font-size="9">• getByRole(role, options)</text>
  <text x="360" y="583" font-size="9">• getByText(text) - 文本定位</text>
  <text x="360" y="596" font-size="9">• getByLabel(text) - 标签定位</text>
  <text x="360" y="609" font-size="9">• first() / last() / nth()</text>
  
  <!-- ExpectAdapter -->
  <rect x="620" y="520" width="250" height="100" fill="white" stroke="#27ae60" stroke-width="1" rx="4"/>
  <text x="745" y="540" text-anchor="middle" font-size="12" font-weight="bold">ExpectAdapter</text>
  <text x="630" y="555" font-size="10">断言系统 API:</text>
  <text x="630" y="570" font-size="9">• toBeVisible() - 可见性</text>
  <text x="630" y="583" font-size="9">• toHaveText(text) - 文本</text>
  <text x="630" y="596" font-size="9">• toBeEnabled() - 启用状态</text>
  <text x="630" y="609" font-size="9">• toHaveValue(value) - 值</text>
  
  <!-- 数据流箭头 -->
  <defs>
    <marker id="arrowhead" markerWidth="8" markerHeight="6" refX="8" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#666"/>
    </marker>
  </defs>
  
  <line x1="500" y1="180" x2="500" y2="195" stroke="#666" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="500" y1="320" x2="500" y2="335" stroke="#666" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="500" y1="460" x2="500" y2="475" stroke="#666" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- 浏览器环境 -->
  <rect x="300" y="660" width="400" height="30" fill="white" stroke="#bdc3c7" rx="4"/>
  <text x="500" y="680" text-anchor="middle" fill="#666" font-size="12">浏览器 DOM 环境</text>
</svg>